name: Dockerhub Image CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: set_var
        run: |
          content=`cat ./config.json`
          version=`echo $(jq -r '.version' <<< "$content")`
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +%Y-%m-%dT%H:%M:%S)" >> $GITHUB_OUTPUT
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USER }}/telegram-delete-join-messages
          SHORTREF=${GITHUB_SHA::8}
          echo '${{steps.set_var.outputs.version}}'
          TAGS="${DOCKER_IMAGE}:${{steps.set_var.outputs.version}},${DOCKER_IMAGE}:${SHORTREF},${DOCKER_IMAGE}:latest"

          # Set output parameters.
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          echo "BUILD_TIMESTAMP=$(date +%Y-%m-%dT%H:%M:%S)" >> $GITHUB_ENV
          echo "TAGS=$(date +%Y-%m-%dT%H:%M:%S)" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: linux/amd64, linux/arm64
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          # platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          # platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_VERSION=${{steps.set_var.outputs.version}}
            BUILD_TIMESTAMP=${{steps.set_var.outputs.timestamp}}
